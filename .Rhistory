gpu_render = comp_tile %>%
filter(eventName = 'Render')
gpu_render = comp_tile %>%
filter(eventName = 'Render')
gpu_render = comp_tile %>%
filter(eventName == 'Render')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
# Plot
ggplot(gpu_perf_avg ) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
ggplot(gpu_perf_avg ) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
# Plot
ggplot(gpu_perf_avg ) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
gpu_render = comp_tile %>%
filter(eventName == 'Tiling')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
gpu_render = comp_tile %>%
filter(eventName == 'Uploading')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
gpu_render = comp_tile %>%
filter(eventName == 'Saving Config')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
gpu_render = comp_tile %>%
filter(eventName == 'Tiling')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
length(gpu_render)
gpu_render = comp_tile %>%
filter(eventName == 'Tiling')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
length(gpu_render$gpuSerial)
gpu_render = comp_tile %>%
filter(eventName == 'TotalRender')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
length(gpu_render$gpuSerial)
gpu_render = comp_tile %>%
filter(eventName == 'Render')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
length(gpu_render$gpuSerial)
View(gpu_perf_avg)
##### Join resource usage dataset to app_task
comp_tile = app_task %>%
# Filter by selected event type and remove non-level 12 observations (because there are basically none compared to level 12)
filter(level == 12) %>%
# Aggregate by taskId computing duration of task using difftime (for each taskId)
group_by(taskId, eventName, x, y) %>%
summarise(duration = as.numeric(difftime(last(timestamp), first(timestamp), unit = 'sec'))) %>%
# Order df by row vectors to prepare for reordering tile durations by tile coordinates
arrange(x,y) %>%
# Join gpu_task dataset (computed means of resource usage by taskId and event)
left_join(gpu_task)
View(gpu_task)
comp_tile = app_task %>%
# Filter by selected event type and remove non-level 12 observations (because there are basically none compared to level 12)
filter(level == 12) %>%
# Aggregate by taskId computing duration of task using difftime (for each taskId)
group_by(taskId, eventName, x, y) %>%
summarise(duration = as.numeric(difftime(last(timestamp), first(timestamp), unit = 'sec'))) %>%
# Order df by row vectors to prepare for reordering tile durations by tile coordinates
arrange(x,y) %>%
# Join gpu_task dataset (computed means of resource usage by taskId and event)
left_join(gpu_task)
gpu_render = comp_tile %>%
group_by(gpuSerial, eventName) %>%
summarise(watt = mean(watt), temp = mean(temp), cpu = mean(cpu), mem = mean(mem)) %>%
arrange(gpuSerial)
gpu_render = comp_tile %>%
group_by(gpuSerial, eventName) %>%
summarise(watt = mean(watt), temp = mean(temp), cpu = mean(cpu), mem = mean(mem)) %>%
arrange(gpuSerial) %>%
filter(eventName == 'Render')
ggplot(gpu_render) + geom_point(aes(gpuSerial, watt)) + labs(x = 'GPU S/N', y = 'Mean Render Time (s)')
ggplot(gpu_t, aes(timestamp, powerDrawWatt)) + geom_line()
gpu_id = data.frame(gpuSerial = sort(unique(gpu$gpuSerial)), id =  1:1024)
gpu_r = gpu
gpu_r = left_join(gpu_r, gpu_id)
t = gpu %>%
filter(gpuSerial == 323217055910)
gpu_t = gpu_r %>%
filter(id == 500)
ggplot(gpu_t, aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_t, aes(timestamp, gpuTempC)) + geom_line()
ggplot(gpu_t, aes(timestamp, gpuUtilPerc)) + geom_line()
View(app_task)
View(gpu_tile)
View(app_task)
View(app_task)
plot(app_task$timestamp,app_task$eventName)
gpu_task2 = data.frame()
# Loop through app_task dataset computing mean resource usage for each event time window
for(i in seq(1,length(app_task$timestamp),2)){
# Progress monitor
print(i)
# Filter and aggregate gpu dataset for each app_task event
x = gpu_perf %>%
# Filter on separate statements to increase alogrithm speed
filter(hostname == app_task_2$hostname[i]) %>%
filter(timestamp >= app_task_2$timestamp[i] & timestamp <= app_task_2$timestamp[i+1]) %>%
# group_by(hostname, gpuSerial) %>%
# summarise(watt = mean(powerDrawWatt), temp = mean(gpuTempC), cpu = mean(gpuUtilPerc), mem = mean(gpuMemUtilPerc)) %>%
# Add event name and task id for current app_task event
mutate(eventName = app_task_2$eventName[i], taskId = app_task_2$taskId[i])
# Bind row to gpu_task df
gpu_task2 = rbind(gpu_task2, as.data.frame(x))
}
View(gpu_task2)
x = gpu_task2[gpu_task2$taskId == 'b9f46a2-a940-4773-996f-6db2204350d2',]
x = gpu_task2[gpu_task2$taskId == 'fb9f46a2-a940-4773-996f-6db2204350d2',]
View(x)
plot(x$powerDrawWatt)
x = gpu_task2[gpu_task2$taskId == 'fb9f46a2-a940-4773-996f-6db2204350d2' & gpu_task2$eventName != 'TotalRender',]
plot(x$powerDrawWatt)
plot(x$powerDrawWatt, x$timestamp)
plot(x$timestamp, x$powerDrawWatt)
gpu_task2 = gpu_task2 %>%
arrange(taskId,timestamp)
x = gpu_task2[gpu_task2$taskId == 'fb9f46a2-a940-4773-996f-6db2204350d2' & gpu_task2$eventName != 'TotalRender',]
plot(x$timestamp, x$powerDrawWatt)
View(app_task_2)
app_task_2 = app_task %>%
filter(level == 12)
arrange(x, y, hostname, taskId, eventName, timestamp)
app_task_2 = app_task %>%
filter(level == 12)
arrange(x, y, hostname, taskId, eventName, timestamp)
app_task_2 = app_task %>%
filter(level == 12) %>%
arrange(x, y, hostname, taskId, eventName, timestamp)
length(unique(app_task_2$hostname))
length(unique(app_task_2$taskId))
length(unique(app_task_2$eventName))
length(unique(app_task_2$level))
length(unique(app_task_2$x))
length(unique(app_task_2$y))
length(unique(app_task_2$eventType))
gpu_perf = gpu %>%
arrange(hostname, timestamp) %>%
filter(eventName == 'TotalRender')
View(gpu)
app_task_2 = app_task %>%
filter(level == 12, eventName == 'TotalRender') %>%
arrange(x, y, hostname, taskId, eventName, timestamp)
gpu_perf = gpu %>%
arrange(hostname, timestamp)
# Designate empty dataframe
gpu_task2 = data.frame()
# Loop through app_task dataset computing mean resource usage for each event time window
for(i in seq(1,length(app_task$timestamp),2)){
# Progress monitor
print(i)
# Filter and aggregate gpu dataset for each app_task event
x = gpu_perf %>%
# Filter on separate statements to increase alogrithm speed
filter(hostname == app_task_2$hostname[i]) %>%
filter(timestamp >= app_task_2$timestamp[i] & timestamp <= app_task_2$timestamp[i+1]) %>%
# group_by(hostname, gpuSerial) %>%
# summarise(watt = mean(powerDrawWatt), temp = mean(gpuTempC), cpu = mean(gpuUtilPerc), mem = mean(gpuMemUtilPerc)) %>%
# Add event name and task id for current app_task event
mutate(eventName = app_task_2$eventName[i], taskId = app_task_2$taskId[i])
# Bind row to gpu_task df
gpu_task2 = rbind(gpu_task2, as.data.frame(x))
}
View(gpu_task2)
x = gpu_task2[gpu_task2$taskId == 'fb9f46a2-a940-4773-996f-6db2204350d2']
plot(x$timestamp, x$powerDrawWatt)
plot(gpu_task2$timestamp, gpu_task2$powerDrawWatt)
ggplot(gpu_task2, aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[gpu_task2$taskId == 'd9d4da27-5478-44a5-928a-ded80a5b7844',], aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[gpu_task2$taskId == 'dc676d2f-20e6-4af2-a3ef-a518e9412591',], aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[gpu_task2$taskId == '16cf73b6-63d4-4dc2-ad68-f85ac006c521',], aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[gpu_task2$taskId == '547b45b3-f045-41e8-be20-1e38d2663316',], aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[1:200,], aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[1:300,], aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[1:800,], aes(timestamp, powerDrawWatt)) + geom_line()
gpu_perf = gpu %>%
arrange(hostname, timestamp) %>%
filter(gpuSerial == 323617042589)
gpu_task2 = data.frame()
# Loop through app_task dataset computing mean resource usage for each event time window
for(i in seq(1,length(app_task$timestamp),2)){
# Progress monitor
print(i)
# Filter and aggregate gpu dataset for each app_task event
x = gpu_perf %>%
# Filter on separate statements to increase alogrithm speed
filter(hostname == app_task_2$hostname[i]) %>%
filter(timestamp >= app_task_2$timestamp[i] & timestamp <= app_task_2$timestamp[i+1]) %>%
# group_by(hostname, gpuSerial) %>%
# summarise(watt = mean(powerDrawWatt), temp = mean(gpuTempC), cpu = mean(gpuUtilPerc), mem = mean(gpuMemUtilPerc)) %>%
# Add event name and task id for current app_task event
mutate(eventName = app_task_2$eventName[i], taskId = app_task_2$taskId[i])
# Bind row to gpu_task df
gpu_task2 = rbind(gpu_task2, as.data.frame(x))
}
gpu_task2 = gpu_task2 %>%
arrange(timestamp)
ggplot(gpu_task2[1:800,], aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2, aes(timestamp, powerDrawWatt)) + geom_line()
View(gpu_task2)
gpu_task2 = data.frame()
# Loop through app_task dataset computing mean resource usage for each event time window
for(i in seq(1,length(app_task$timestamp),2)){
# Progress monitor
print(i)
# Filter and aggregate gpu dataset for each app_task event
x = gpu_perf %>%
# Filter on separate statements to increase alogrithm speed
filter(hostname == app_task_2$hostname[i]) %>%
filter(timestamp >= app_task_2$timestamp[i] & timestamp <= app_task_2$timestamp[i+1]) %>%
# group_by(hostname, gpuSerial) %>%
# summarise(watt = mean(powerDrawWatt), temp = mean(gpuTempC), cpu = mean(gpuUtilPerc), mem = mean(gpuMemUtilPerc)) %>%
# Add event name and task id for current app_task event
mutate(eventName = app_task_2$eventName[i], taskId = app_task_2$taskId[i])
# Bind row to gpu_task df
gpu_task2 = rbind(gpu_task2, as.data.frame(x))
}
ggplot(gpu_task2, aes(timestamp, powerDrawWatt)) + geom_line()
View(gpu)
View(gpu_plot)
View(gpu_render)
View(gpu_plot)
gpu_perf = gpu %>%
arrange(hostname, timestamp) %>%
filter(hostname == '04dc4e9647154250beeee51b866b071500000G')
app_task_2 = app_task %>%
filter(level == 12, eventName == 'TotalRender',hostname == '04dc4e9647154250beeee51b866b071500000G') %>%
arrange(x, y, hostname, taskId, eventName, timestamp)
gpu_task2 = data.frame()
# Loop through app_task dataset computing mean resource usage for each event time window
for(i in seq(1,length(app_task$timestamp),2)){
# Progress monitor
print(i)
# Filter and aggregate gpu dataset for each app_task event
x = gpu_perf %>%
# Filter on separate statements to increase alogrithm speed
filter(hostname == app_task_2$hostname[i]) %>%
filter(timestamp >= app_task_2$timestamp[i] & timestamp <= app_task_2$timestamp[i+1]) %>%
# group_by(hostname, gpuSerial) %>%
# summarise(watt = mean(powerDrawWatt), temp = mean(gpuTempC), cpu = mean(gpuUtilPerc), mem = mean(gpuMemUtilPerc)) %>%
# Add event name and task id for current app_task event
mutate(eventName = app_task_2$eventName[i], taskId = app_task_2$taskId[i])
# Bind row to gpu_task df
gpu_task2 = rbind(gpu_task2, as.data.frame(x))
}
gpu_task2 = data.frame()
# Loop through app_task dataset computing mean resource usage for each event time window
for(i in seq(1,length(app_task_2$timestamp),2)){
# Progress monitor
print(i)
# Filter and aggregate gpu dataset for each app_task event
x = gpu_perf %>%
# Filter on separate statements to increase alogrithm speed
filter(hostname == app_task_2$hostname[i]) %>%
filter(timestamp >= app_task_2$timestamp[i] & timestamp <= app_task_2$timestamp[i+1]) %>%
# group_by(hostname, gpuSerial) %>%
# summarise(watt = mean(powerDrawWatt), temp = mean(gpuTempC), cpu = mean(gpuUtilPerc), mem = mean(gpuMemUtilPerc)) %>%
# Add event name and task id for current app_task event
mutate(eventName = app_task_2$eventName[i], taskId = app_task_2$taskId[i])
# Bind row to gpu_task df
gpu_task2 = rbind(gpu_task2, as.data.frame(x))
}
View(app_task_2)
View(gpu_task2)
ggplot(gpu_task2, aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_t, aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2, aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[1:200,], aes(timestamp, powerDrawWatt)) + geom_line()
gpu_task2 = gpu_task2 %>%
arrange(timestamp)
ggplot(gpu_task2[1:200,], aes(timestamp, powerDrawWatt)) + geom_line()
ggplot(gpu_task2[1:300,], aes(timestamp, powerDrawWatt)) + geom_line()
View(app_task)
q3 = app_task %>%
filter(eventName == 'Render') %>%
group_by(taskId, eventName, x, y) %>%
summarise(duration = as.numeric(difftime(last(timestamp), first(timestamp), unit = 'sec')))
View(q3)
hist(q3$duration)
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.1, fill=I("#0066CC"), col=I("white"), alpha=I(0.8))
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.01, fill=I("#0066CC"), col=I("white"), alpha=I(0.8))
ggplot(q3, aes(duration)) + geom_density()
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8))
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.2, fill=I("#0066CC"), col=I("white"), alpha=I(0.8))
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.2, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) + geom_vline(xintercept = mean(q3$duration), color = 'red')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = mean(q3$duration), color = 'red') +
geom_vline(xintercept = median(q3$duration), color = 'red')
quantile(q3, type = 6)
quantile(q3$duration, type = 6)
quantile(q3$duration, type = 6)[4]
quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)
quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[18]
quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20]
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = mean(q3$duration), color = 'red') +
geom_vline(xintercept = median(q3$duration), color = 'red') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'red')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = mean(q3$duration), color = 'red') +
geom_vline(xintercept = median(q3$duration), color = 'red') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'red') +
geom_vline(xintercept = max(q3$duration), color = 'red')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotted') +
geom_vline(xintercept = median(q3$duration), color = 'red') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'red') +
geom_vline(xintercept = max(q3$duration), color = 'red')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dash') +
geom_vline(xintercept = median(q3$duration), color = 'red') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'red') +
geom_vline(xintercept = max(q3$duration), color = 'red')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dashed') +
geom_vline(xintercept = median(q3$duration), color = 'red') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'red') +
geom_vline(xintercept = max(q3$duration), color = 'red')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = mean(q3$duration), color = 'green', linetype = 'dashed') +
geom_vline(xintercept = median(q3$duration), color = 'red') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'red',linetype = 'dotted') +
geom_vline(xintercept = max(q3$duration), color = 'orange', linetype = 'dashed')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = mean(q3$duration), color = 'green') +
geom_vline(xintercept = median(q3$duration), color = 'red') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'red',linetype = 'dotted') +
geom_vline(xintercept = max(q3$duration), color = 'orange', linetype = 'dashed')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'orange', linetype = 'dashed') +
geom_vline(xintercept = mean(q3$duration), color = 'green') +
geom_vline(xintercept = median(q3$duration), color = 'red') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'red',linetype = 'dotted') +
geom_vline(xintercept = max(q3$duration), color = 'orange', linetype = 'dashed')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'green', linetype = 'dashed') +
geom_vline(xintercept = mean(q3$duration), color = 'black') +
geom_vline(xintercept = median(q3$duration), color = 'purple') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dotted') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dashed')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'green', linetype = 'dashed') +
geom_vline(xintercept = mean(q3$duration), color = 'black') +
geom_vline(xintercept = median(q3$duration), color = 'purple') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dotted') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'green', linetype = 'dashed') +
geom_vline(xintercept = mean(q3$duration), color = 'black') +
geom_vline(xintercept = median(q3$duration), color = 'purple') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dash') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'green', linetype = 'dashed') +
geom_vline(xintercept = mean(q3$duration), color = 'black') +
geom_vline(xintercept = median(q3$duration), color = 'purple') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'green', linetype = 'dotdash') +
geom_vline(xintercept = mean(q3$duration), color = 'black') +
geom_vline(xintercept = median(q3$duration), color = 'purple') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_vline(xintercept = mean(q3$duration), color = 'black') +
geom_vline(xintercept = median(q3$duration), color = 'purple') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_vline(xintercept = mean(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_vline(xintercept = mean(q3$duration), color = 'green', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_vline(xintercept = mean(q3$duration), color = 'red') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_text(aes(0,min(q3$duration),label = min(q3$duration), vjust = -1)) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_text(aes(0,min(q3$duration),label = 'test', vjust = -1)) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_text(aes(0,2,label = 'test', vjust = -1)) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_text(aes(0,2,label = 'test', vjust = 1)) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_text(data=data.frame(x=min(q3$duration),y=0), aes(x, y), label=h, vjust=-1) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_text(data=data.frame(x=min(q3$duration),y=0), aes(x, y), label=x=min(q3$duration), vjust=-1) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
geom_text(aes(label = 'City'), hjust = 0.7, vjust = 1) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=8, y=13000, label= "boat") +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=min(q3$duration), y=2500, label= "boat") +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=min(q3$duration)+10, y=2500, label= "boat") +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=min(q3$duration)+1, y=2500, label= "boat") +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=min(q3$duration)+2, y=2500, label= "boat") +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=min(q3$duration)+2, y=max(count), label= "boat") +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=min(q3$duration)+2, y=3000, label= "boat") +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=min(q3$duration)+2, y=3000, label= paste("Min")) +
geom_text(aes(x=min(q3$duration) + 2.6, label="My label text", y=0), colour="blue", angle=90) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
ggplot(q3, aes(duration)) + geom_histogram(binwidth = 0.5, fill=I("#0066CC"), col=I("white"), alpha=I(0.8)) +
geom_vline(xintercept = min(q3$duration), color = 'darkgreen', linetype = 'dotdash') +
annotate("text", x=min(q3$duration)+2, y=3000, label= paste("Min")) +
geom_text(aes(x=2.6, label="My label text", y=0), colour="blue", angle=90) +
geom_vline(xintercept = mean(q3$duration), color = 'red', linetype = 'dotdash') +
geom_vline(xintercept = median(q3$duration), color = 'purple', linetype = 'dotdash') +
geom_vline(xintercept = quantile(q3$duration, probs = seq(0, 1, 0.05), type = 6)[20], color = 'orange',linetype = 'dashed') +
geom_vline(xintercept = max(q3$duration), color = 'red', linetype = 'dotdash')
