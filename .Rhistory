S
s_sq = diag(S)
tot_var = sum(s_sq)
tot_var
pca1 = prcomp(x=x)
pca1
pca1$rotation
pca1$sdev
summary(pca1)
y <- summary(pca1)
y
y$sdev
y$center
plot(y)
pca2 <- prcomp(x=x, scale = TRUE)
pca2
summary(pca2)
library(nclSLR)
data("USArrests", package = "nclSLR")
View(USArrests)
USArrestsData = as.matrix(USArrests[,1:4])
View(USArrestsData)
USRegions = USArrests[,5]
pairs(USArrestsData)
colMeans(USArrestsData)
apply(USArrestsData, 2, var)
var(USArrestsData)
diar(var(USArrestsData))
diag(var(USArrestsData))
pca_arr1 = prcomp(USArrestsData, scale=TRUE)
pca_arr1
pca_arr1$x
summary(pca_arr1)
plot(pca_arr1, type = "l", main="")
title(xlab = "Component Number")
plot(pca_arr1$x[,1], pca_arr1$x[,2], xlab="First PC", ylab="Second PC")
text(pca_arr1$[,1], pca_arr1$x[,2], labels=rownames(USArrests), cex=0.7, pos=3, col="darkgrey")
text(pca_arr1$x[,1], pca_arr1$x[,2], labels=rownames(USArrests), cex=0.7, pos=3, col="darkgrey")
head(USRegions)
View(USRegions)
UsRegion_Labels = as.numeric(USRegions)
head(UsRegion_Labels)
plot(pca_arr1$x[,1], pca_arr1$x[,2], col=USRegion_Labels, pch=USRegion_Labels, xlab="First PC", ylab="Second PC")
plot(pca_arr1$x[,1], pca_arr1$x[,2], col=UsRegion_Labels, pch=UsRegion_Labels, xlab="First PC", ylab="Second PC")
text(pca_arr1$x[,1], pca_arr1$x[,2], labels=rownames(USArrests), cex=0.7, pos=3, col="darkgrey")
text(pca_arr1$x[,1], labels=rownames(USArrests), cex=0.7, pos=3, col="darkgrey")
plot(pca_arr1$x[,1], col=UsRegion_Labels, pch=UsRegion_Labels, xlab="First PC", ylab="Second PC")
library(ElemStatLearn)
data(zip.train)
View(zip.train)
dim(zip.train)
?zip.train
View(names(zip.train))
str(zip.train)
row5_digit = vector2image(zip.train[5,-1])
source('~/PCA.R')
source('~/PCA.R')
row5_digit = vector2image(zip.train[5,-1])
row5_digit
zip.train[5,1]
image(t(row5_digit), col=grey(31:0/31), xlab = "", ylab = "")
image(t(row5_digit), col=grey(0:31/31), xlab = "", ylab = "")
image(t(row5_digit), col=grey(10:0/10), xlab = "", ylab = "")
image(t(row5_digit), col=grey(31:0/31), xlab = "", ylab = "")
image(t(row5_digit), col=grey(10:0/10), xlab = "", ylab = "")
image(t(row5_digit), col=grey(3:0/3), xlab = "", ylab = "")
image(t(row5_digit), col=grey(2:0/2), xlab = "", ylab = "")
threes = filter(zip.train, zip.train[,1] == 3)
class(zip.train)
threes = zip.train[zip.train[,1] == 3,-1]
View(threes)
dim(threes)
mean_threes = colMeans(threes)
image(t(vector2image(mean_threes)), col=grey(31:0/31), xlab = "", ylab = "")
image(t(vector2image(mean_threes)), col=grey(310:0/310), xlab = "", ylab = "")
image(t(vector2image(mean_threes)), col=grey(31000:0/31000), xlab = "", ylab = "")
var(threes)
var_three = var(threes)
dim(var_three)
image(t(matrix2image(var_three)), col=grey(31:0/31), xlab = "", ylab = "")
X = zip.train[,-1]
pca_zip = prcomp(X, scale=FALSE)
summary(pca_zip)
prop_var = pca_zip$sdev^2
head(prop_var)
cumul_prop_var = cumsum(prop_var)
head(cumul_prop_var)
which(cumul_prop_var>=0.7)[1]
prop_var = pca_zip$sdev^2/sum(pca_zip$sdev^2)
head(prop_var)
which(prop_var>=0.7)
cumul_prop_var = cumsum(prop_var)
cumul_prop_var
which(cumul_prop_var>=0.7)
which(cumul_prop_var>=0.7)[1]
plot(pca_zip, npcs=30, type="lines", main="")
plot(pca_zip, npcs=10, type="lines", main="")
cumul_prop_var[6]
S = var(X)
sum(diag(S))
Y = pca_zip$x
T = var(Y)
sum(diag(T))
Y_6 = Y[,1:6]
T_6 = var(Y_6)
sum(diag(T_6))
L = pca_zip$rotation
X_6 = Y_6 %*% t(L[,1:6])
S_6 = var(X_6)
par(mfrow=c(1,2))
image(t(matrix2image(S)), col=grey(31:0/31), xlab="", ylab="")
image(t(matrix2image(S_6)), col=grey(31:0/31), xlab="", ylab = "")
data("airpollution", package = nclSLR)
library(nclSLR)
data("airpollution", package = nclSLR)
data("airpollution")
dim(airpollution)
head(airpollution)
?airpollution
pairs(airpollution)
plot(airpollution$PM2, airpollution$PMEAN)
air2 = airpollution
max(air2$PM2)
air2 = filter(airpollution, rownames(airpollution) != "JERSEYCITY")
View(air2)
air2
head(air2)
head(airpollution)
rownames(airpollution)
air2 = filter(airpollution, rownames(airpollution) != "JERSEYC")
dim(air2)
plot(air2$PMEAN,air2$PM2)
air = airpollution
var(air)
pca_air = prcomp(air, scale = TRUE)
pca_air
summary(pca_air)
plot(pca_air$x[,1], pca_air$x[,2])
sum(diag(air))
sum(diag(pca_air))
diag(var(air))
sum(diag(var(air)))
dim(threes)
var(threes)
dim(var(threes))
diag(var(threes))
sum(diag(var(threes)))
trace(var(threes))
ax <- diag(var(threes))
plot(ax)
par(mfrow=c(1,1))
plot(ax)
plot(ax, type="l")
View(var(threes))
image(t(matrix2image(var_three)), col=grey(31:0/31), xlab = "", ylab = "")
image(t(matrix2image(var_three)), col=grey(15:0/15), xlab = "", ylab = "")
image(t(matrix2image(var_three)), col=grey(5:0/5), xlab = "", ylab = "")
summary(pca_zip)
dim(airpollution)
View(pca_arr1)
View(pca_zip)
View(pca_zip)
rm(pca_zip)
rm(list=())
list=()
list()
lm()
list(all)
ls()
rm(list=(ls))
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
titanic_train = read.csv(file = "~/Desktop/all/test.csv")
View(titanic_train)
View(titanic_train)
titanic_test = read.csv(file = "~/Desktop/all/test.csv")
View(titanic_test)
titanic_train = read.csv(file = "~/Desktop/all/train.csv")
View(titanic_train)
sum(titanic_train$Survived)
mean(titanic_train$Survived)
table(titanic_train$Pclass, titanic_train$Survived)
tblFun <- function(x){
tbl <- table(x)
res <- cbind(tbl,round(prop.table(tbl)*100,2))
colnames(res) <- c('Count','Percentage')
res
}
tblFun(table(titanic_train$Pclass, titanic_train$Survived))
View(titanic_train)
x = read.csv(file = "Desktop/DS_Projects/CSC8635_ML_Asg/data/train.csv")
1 + 1
stats = fromJSON("Desktop/DS_Projects/CSC_Cloud_Asg/data/benchcollection.json")
library(RJSONIO)
stats = fromJSON("Desktop/DS_Projects/CSC_Cloud_Asg/data/benchcollection.json")
##### Parsing function
parse_json = function(json, id){
df <- data.frame(rx_bytes=double(),
tx_bytes=double(),
mem_usage=double(),
cpu_tot=double(),
stringsAsFactors=FALSE)
for (j in 1:length(stats)){
if(stats[[j]][['id']] == id){
service = stats[[j]][['jsonStats']]
rx_bytes = numeric()
tx_bytes = numeric()
mem_usage = numeric()
cpu_tot = numeric()
for (i in service){
rx_bytes = c(rx_bytes, i[['network']][['tx_bytes']])
tx_bytes = c(tx_bytes, i[['network']][['rx_bytes']])
mem_usage = c(mem_usage, i[['memory']][['usage']])
cpu_tot = c(cpu_tot, i[['cpu']][['usage']][['total']])
}
x = data.frame(rx_bytes,tx_bytes,mem_usage,cpu_tot)
df = rbind(df,x)
}
}
return(df)
}
#Call parsing functions
web1 = parse_json(stats, "27834e482f3ed466b841d959ef2fcd1eeac6704addab367b866b5c5f988b6520")
web2 = parse_json(stats, "05bf2fabd3fcf0185c63217a8fd68e3a25915434eca62a60ed6c384bfc96156b")
file <- "~/Desktop/_chat.txt"
con <- file(description=file, open="r")
## Hopefully you know the number of lines from some other source or
com <- paste("wc -l ", file, " | awk '{ print $1 }'", sep="")
com
n <- system(command=com, intern=TRUE)
n
df = df()
df = data.frame()
for(i in 1:n) {
tmp <- scan(file=con, nlines=1, quiet=TRUE)
df = rbind(tmp)
## do something on a line of data
}
p16 = plot_hist(gpu_task,'watt','Render',lab = 'Power Consumption (W)', n=0.5,c=1,h=0.9)
p17 = plot_hist(gpu_task,'watt','Tiling',lab = 'Power Consumption (W)', n=0.2,c=0,e=1,h=0.9)
cache('p16')
cache('p17')
grid.arrange(p16, p17, ncol=1)
p18 = plot_hist(gpu_task,'watt','Uploading',lab = 'Power Consumption (W)', n=0.2,c=1,h=0.9)
p19 = plot_hist(gpu_task,'watt','Saving Config',lab = 'Power Consumption (W)', n=0.2,c=0,h=0.9)
cache('p18')
cache('p19')
grid.arrange(p18, p19, ncol=1)
setwd('Desktop/DS_Projects/CSC8634_CC_Project/')
library(ProjectTemplate)
load.project()
p16 = plot_hist(gpu_task,'watt','Render',lab = 'Power Consumption (W)', n=0.5,c=1,h=0.9)
p17 = plot_hist(gpu_task,'watt','Tiling',lab = 'Power Consumption (W)', n=0.2,c=0,e=1,h=0.9)
cache('p16')
cache('p17')
grid.arrange(p16, p17, ncol=1)
p18 = plot_hist(gpu_task,'watt','Uploading',lab = 'Power Consumption (W)', n=0.2,c=1,h=0.9)
p19 = plot_hist(gpu_task,'watt','Saving Config',lab = 'Power Consumption (W)', n=0.2,c=0,h=0.9)
cache('p18')
cache('p19')
grid.arrange(p18, p19, ncol=1)
plot_hist(gpu_task,'watt','Saving Config',lab = 'Power Consumption (W)', n=0.2,c=1,h=0.9)
plot_hist(gpu_task,'watt','Saving Config',lab = 'Power Consumption (W)', n=0.2,c=0,e=1,h=0.9)
p19 = plot_hist(gpu_task,'watt','Saving Config',lab = 'Power Consumption (W)', n=0.2,c=0,e=1,h=0.9)
cache('p18')
cache('p19')
grid.arrange(p18, p19, ncol=1)
p24
heatmap(p24)
png(filename="graph/p24.png")
heat_vis('Render','duration',caption='on')
dev.off()
jpg(filename="graph/p24.jpg")
heat_vis('Render','duration',caption='on')
dev.off()
X11 ()
heat_vis('Render','duration',caption='on')
dev.copy(jpeg,filename="plot.jpg");
dev.off ();
eat_vis('Render','duration',caption='off')
dev.copy(jpeg,filename="graphs/p24.jpg");
dev.off ();
heat_vis('Render','duration',caption='off')
dev.print(jpeg,filename="graphs/p25.jpg");
dev.off ();
heat_vis('Render','duration',caption='off')
dev.print(jpeg,filename="./graphs/p25.jpg");
dev.off ();
heat_vis('Render','duration',caption='off')
dev.print(jpeg,filename="graphs/p25.jpg");
dev.off ();
heat_vis('Render','duration',caption='off')
dev.copy(jpeg,filename="graphs/p25.jpg");
dev.off ();
heat_vis('Render','duration',caption='on')
dev.copy(jpeg,filename="graphs/p25.jpg");
dev.off ();
heat_vis('Render','duration',caption='on')
dev.copy(jpeg,filename="p25.jpg")
dev.off ();
pdf('test2.pdf')
heat_vis('Render','duration',caption='on')
# dev.copy(jpeg,filename="p25.jpg")
dev.off ();
pdf('graph/p24.pdf')
heat_vis('Render','duration',caption='on')
dev.off ();
pdf('graph/p24.pdf')
heat_vis('Render','duration',caption='on')
dev.off ();
pdf('graph/p24.pdf')
heat_vis('Render','duration',caption='on')
dev.off ();
dev.off ();
pdf('graph/p24.pdf')
pdf('graph/p24.pdf')
heat_vis('Render','duration',caption='on')
dev.off ();
pdf('graphs/p24.pdf')
heat_vis('Render','duration',caption='on')
dev.off ();
pdf('graphs/p24.pdf')
heat_vis('Render','duration',caption='off')
dev.off ();
pdf('graphs/p25.pdf')
heat_vis('Tiling','duration',caption='off')
dev.off ();
pdf('graphs/p26.pdf')
heat_vis('Saving Config','duration',caption='off')
dev.off ();
pdf('graphs/p27.pdf')
heat_vis('Uploading','duration',caption='off')
dev.off ();
pdf('graphs/p26.pdf')
heat_vis('Render','watt',caption='off')
dev.off ();
pdf('graphs/p27.pdf')
heat_vis('Tiling','watt',caption='off')
dev.off ();
pdf('graphs/p28.pdf')
heat_vis('Render','temp',caption='off')
dev.off ();
pdf('graphs/p29.pdf')
heat_vis('Tiling','temp',caption='off')
dev.off ();
pdf('graphs/p28.pdf')
heat_vis('Render','cpu',caption='off')
dev.off ();
pdf('graphs/p24.pdf')
heat_vis('Render','duration',caption='on')
dev.off ();
pdf('graphs/p25.pdf')
heat_vis('Tiling','duration',caption='on')
dev.off ();
pdf('graphs/p26.pdf')
heat_vis('Render','watt',caption='on')
dev.off ();
pdf('graphs/p27.pdf')
heat_vis('Tiling','watt',caption='on')
dev.off ();
pdf('graphs/p28.pdf')
heat_vis('Render','temp',caption='on')
dev.off ();
pdf('graphs/p29.pdf')
heat_vis('Tiling','temp',caption='on')
dev.off ();
pdf('graphs/p30.pdf')
heat_vis('Render','cpu',caption='on')
dev.off ();
pdf('graphs/p31.pdf')
heat_vis('Tiling','cpu',caption='on')
dev.off ();
pdf('graphs/p32.pdf')
heat_vis('Render','mem',caption='on')
dev.off ();
pdf('graphs/p33.pdf')
heat_vis('Tiling','mem',caption='on')
dev.off ();
jpg('graphs/p24.jpg')
heat_vis('Render','duration',caption='on')
dev.off ();
jpg('graphs/p25.jpg')
heat_vis('Tiling','duration',caption='on')
dev.off ();
png('graphs/p24.png')
heat_vis('Render','duration',caption='on')
dev.off ();
jpeg('graphs/p24.jpeg')
heat_vis('Render','duration',caption='on')
dev.off ();
pdf('graphs/p24.pdf')
heat_vis('Render','duration',caption='on')
dev.off ();
library("bookdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
bookdown-demo.Rproj
grid.arrange(p20, p21, p22, p23, ncol=1)
grid.arrange(p20, p21, p22, p23, ncol=2)
source('~/.active-rstudio-document', echo=TRUE)
library(png)
#read file
img<-readPNG("p24.png")
library(png)
install.packages(png)
install.packages('png')
library(png)
img<-readPNG("p24.png")
img
pdf('graphs/p24.pdf')
heat_vis('Render','duration',caption='on')
dev.off ();
jpg('graphs/p25.jpg')
heat_vis('Tiling','duration',caption='on')
dev.off ();
pdf('graphs/p26.pdf')
heat_vis('Render','watt',caption='on')
dev.off ();
pdf('graphs/p27.pdf')
heat_vis('Tiling','watt',caption='on')
dev.off ();
library(png)
library(grid)
library(gridExtra)
png('graphs/p24.png')
heat_vis('Render','duration',caption='on')
dev.off ();
png('graphs/p25.png')
heat_vis('Tiling','duration',caption='on')
dev.off ();
png('graphs/p26.png')
heat_vis('Render','watt',caption='on')
dev.off ();
png('graphs/p27.png')
heat_vis('Tiling','watt',caption='on')
dev.off ();
i1 <-  rasterGrob(as.raster(readPDF("graphs/p24.pdf")), interpolate = FALSE)
i2 <-  rasterGrob(as.raster(readPDF("graphs/p25.pdf")), interpolate = FALSE)
i3 <-  rasterGrob(as.raster(readPDF("graphs/p26.pdf")), interpolate = FALSE)
i4 <-  rasterGrob(as.raster(readPDF("graphs/p27.pdf")), interpolate = FALSE)
i1 <-  rasterGrob(as.raster(readPNG("graphs/p24.pdf")), interpolate = FALSE)
i1 <-  rasterGrob(as.raster(readPNG("graphs/p24.png")), interpolate = FALSE)
i2 <-  rasterGrob(as.raster(readPNG("graphs/p25.png")), interpolate = FALSE)
i3 <-  rasterGrob(as.raster(readPNG("graphs/p26.png")), interpolate = FALSE)
i4 <-  rasterGrob(as.raster(readPNG("graphs/p27.png")), interpolate = FALSE)
grid.arrange(i1, i2, i3, i4, ncol = 2)
png('graphs/p28.png')
heat_vis('Render','temp',caption='on')
dev.off ();
png('graphs/p29.png')
heat_vis('Tiling','temp',caption='on')
dev.off ();
png('graphs/p30.png')
heat_vis('Render','cpu',caption='on')
dev.off ();
png('graphs/p31.png')
heat_vis('Tiling','cpu',caption='on')
dev.off ();
png('graphs/p32.png')
heat_vis('Render','mem',caption='on')
dev.off ();
png('graphs/p33.png')
heat_vis('Tiling','mem',caption='on')
dev.off ();
grid.arrange(i1, i2, i3, i4, ncol = 2)
grid.arrange(i1, i2, i3, i4, i5, i6 ncol = 3)
grid.arrange(i1, i2, i3, i4, i5, i6, ncol = 3)
i5 <-  rasterGrob(as.raster(readPNG("graphs/p28.png")), interpolate = FALSE)
i6 <-  rasterGrob(as.raster(readPNG("graphs/p29.png")), interpolate = FALSE)
grid.arrange(i1, i2, i3, i4, i5, i6, ncol = 3)
grid.arrange(i1, i2, i3, i4, i5, i6, ncol = 2)
i7 <-  rasterGrob(as.raster(readPNG("graphs/p30.png")), interpolate = FALSE)
i8 <-  rasterGrob(as.raster(readPNG("graphs/p31.png")), interpolate = FALSE)
i9 <-  rasterGrob(as.raster(readPNG("graphs/p32.png")), interpolate = FALSE)
grid.arrange(i1, i2, i3, i4, i5, i6, i7, i8, i9, ncol = 2)
grid.arrange(i1, i2, i3, i4, i5, i6, i7, i8, i9, ncol = 3)
heat_vis('Tiling','mem',caption='on')
heat_vis('Tiling','cpu',caption='on')
heat_vis('Tiling','watt',caption='on')
grid.arrange(i1, i2, i3, i4, i5, i6, i7, i8, i9, ncol = 3)
grid.arrange(i1, i2, i3, i9, i7, i5, ncol = 2)
grid.arrange(i1, i2, i3, i9, i7, i5, ncol = 3)
grid.arrange(i1, i2, i3, i9, i7, i5, ncol = 2)
i1 <-  rasterGrob(as.raster(readPNG("graphs/p24.png")), interpolate = FALSE)
cache('i1')
i2 <-  rasterGrob(as.raster(readPNG("graphs/p25.png")), interpolate = FALSE)
cache('i2')
i3 <-  rasterGrob(as.raster(readPNG("graphs/p26.png")), interpolate = FALSE)
cache('i3')
i4 <-  rasterGrob(as.raster(readPNG("graphs/p27.png")), interpolate = FALSE)
i5 <-  rasterGrob(as.raster(readPNG("graphs/p28.png")), interpolate = FALSE)
cache('i5')
i6 <-  rasterGrob(as.raster(readPNG("graphs/p29.png")), interpolate = FALSE)
i7 <-  rasterGrob(as.raster(readPNG("graphs/p30.png")), interpolate = FALSE)
cache('i7')
i8 <-  rasterGrob(as.raster(readPNG("graphs/p31.png")), interpolate = FALSE)
i9 <-  rasterGrob(as.raster(readPNG("graphs/p32.png")), interpolate = FALSE)
cache('i9')
png('graphs/p33.png')
heat_vis('Saving Config','Duration',caption='on')
dev.off ();
png('graphs/p34.png')
heat_vis('Saving Config','Duration',caption='on')
dev.off ();
heat_vis('Saving Config','Duration',caption='on')
heat_vis('Uploading','Duration',caption='on')
heat_vis('Uploading','watt',caption='on')
heat_vis('Uploading','mem',caption='on')
heat_vis('Uploading','cpu',caption='on')
heat_vis('Uploading','temp',caption='on')
heat_vis('Saving Config','temp',caption='on')
heat_vis('Saving Config','watt',caption='on')
heat_vis('Saving Config','mem',caption='on')
heat_vis('Saving Config','cpu',caption='on')
